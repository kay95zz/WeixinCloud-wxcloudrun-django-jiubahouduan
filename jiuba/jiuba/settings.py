"""
Django settings for jiuba project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import sys
import os
from pathlib import Path
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7wvs^r**wk+jh(#8o&owtno2y%jafm-@0o5sngrh0nw1*jd_6^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

#媒体文件
# 媒体文件配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 文件上传权限
FILE_UPLOAD_PERMISSIONS = 0o644
#自定义用户模型
AUTH_USER_MODEL = 'user.User'

# 将apps目录添加到Python路径中
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(f"BASE_DIR type: {type(BASE_DIR)}")
print(f"BASE_DIR value: {BASE_DIR}")
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     # 第三方应用
    'rest_framework',   # 如果使用Django REST Framework
    'corsheaders', 
    'django_filters',     
    # 自定义应用
    'apps.product',     # 商品管理应用
    'apps.order',       # 订单管理应用
    'apps.user',        # 用户管理应用
    'apps.reservations',# 预约管理应用
    'apps.payment',     # 支付应用
    'apps.shop',        # 店铺相关
    'apps.endpoints',   # 店铺相关
    'apps.services',    # 购物车和订单服务
    'apps.cart',        # 购物车配置
    'apps.activity',    # 活动管理
    'apps.merchant',        # 新增商家管理应用


   #'apps.product.apps.ProductConfig',            # 商品管理应用
    #'apps.order.apps.OrderConfig',           # 订单管理应用
   # 'apps.user.apps.UserConfig',            # 用户管理应用
    #'apps.reservations.ReservationsConfig',     # 预约管理应用
    #'apps.payment.PaymentConfig',         # 支付应用
    #'apps.shop.ShopConfig',         # 店铺相关
    #'apps.endpoints.EndpointsConfig',         # 店铺相关
    #'apps.services.ServicesConfig',         # 购物车和订单服务
   # 'user.apps.UserConfig',  
   # 'shop.apps.ShopConfig',
  #  'product.apps.ProductConfig',
   # 'order.apps.OrderConfig',
  #  'reservation.apps.ReservationConfig',
   # 'payment.apps.PaymentConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'jiuba.middleware.MerchantAuthMiddleware',
]

ROOT_URLCONF = 'jiuba.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'apps/merchant/templates',  # 新增商家模板目录
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.debug',
            ],
        },
    },
]

WSGI_APPLICATION = 'jiuba.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
#数据库设置

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3', 
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# 静态文件设置
STATIC_URL = 'static/'
STATICFILES_DIRS = [
     BASE_DIR / 'static',  # 使用 Path 对象
]

# 媒体文件设置
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'  # 使用 Path 对象

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST Framework设置
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

# 跨域设置
CORS_ALLOW_ALL_ORIGINS = True

# 微信小程序设置
WECHAT_APP_ID = '您的微信小程序AppID'
WECHAT_APP_SECRET = '您的微信小程序AppSecret'
WECHAT_MCH_ID = '您的微信支付商户号'
WECHAT_API_KEY = '您的微信支付API密钥'
WECHAT_NOTIFY_URL = 'https://yourdomain.com/api/payment/wechat-callback/'